@keyframes fadeIn {
  from {
    opacity: 0;
  }

  to {
    opacity: 1;
  }
}

@keyframes fadeInRight {
  from {
    transform: translate3d(100%, 0, 0);
    opacity: 0;
  }

  to {
    opacity: 1;
  }
}

@keyframes fadeOutLeft {
  from {
    opacity: 1;
  }

  to {
    transform: translate3d(-100%, 0, 0);
    opacity: 0;
  }
}

// Breakpoints
@mixin respond-to($breakpoint) {
  @if map-has-key($breakpoints, $breakpoint) {
    @media (max-width: #{map-get($breakpoints, $breakpoint)}) {
      @content;
    }
  }

  @else {
    @warn "Unfortunately, no value could be retrieved from `#{$breakpoint}`. "
        + "Please make sure it is defined in `$breakpoints` map.";
  }
}

@mixin transition-fast() {
  transition: background-color .2s ease;
}

@mixin shadow() {
  box-shadow: 0 6px 15px -2px rgba(0,0,0, 0.1);
}

@mixin removeLinkStyles {
  text-decoration: none;
  border: none;
  box-shadow: none;
}

//
// Dim
//
@mixin dim {
  transition: opacity 0.5 ease;
  box-shadow: none;
  background-color: transparent;

  &:hover {
    opacity: 0.7;
  }
}

//
// Dim
//
@mixin darken {
  transition: opacity 0.5 ease;

  &:hover {
    opacity: 1;
  }
}

//
// Underline
//
@mixin underline {
  text-decoration: none;
  box-shadow: inset 0 -4px 0 color(links);
  transition: background .14s cubic-bezier(.33,.66,.66, 1);

  @include respond-to(900) {
    box-shadow: inset 0 -3px 0 color(links);
  }

  &:hover {
    color: color(base);
    background-color: color(links);
  }
}
